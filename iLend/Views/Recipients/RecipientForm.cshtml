@model iLend.ViewModels.RecipientFormViewModel

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Recipients"))
{
    @Html.ValidationSummary(true, "* Please fix the highlighted error(s).", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Recipient.Name)
        @Html.TextBoxFor(m => m.Recipient.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Recipient.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Recipient.UserGroupId)
        @Html.DropDownListFor(m => m.Recipient.UserGroupId, new SelectList(Model.UserGroups, "Id", "Name"), "-- No user group selected --", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Recipient.UserGroupId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Recipient.BirthDate)
        @Html.EditorFor(m => m.Recipient.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Recipient.BirthDate)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Recipient.IsSubscibedToNewsletter) Subscribe to Newsletter?
        </label>
    </div>
    @Html.HiddenFor(m => m.Recipient.Id)
    @Html.AntiForgeryToken()
    @Html.ActionLink("Cancel", "Index", "Recipients", null, new { @class = "btn btn-default" }) <span>&nbsp;</span>
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

